@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+Lao:wght@200;400;500;600&display=swap');
@tailwind base;
@tailwind components;
@tailwind utilities;

@import 'slick-carousel/slick/slick.css';
@import 'slick-carousel/slick/slick-theme.css';
.ocean {
    height: 200px; /* change the height of the waves here */
    width: 100%;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    overflow-x: hidden;
  }

  .wave {
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 800 88.7'%3E%3Cpath d='M800 56.9c-155.5 0-204.9-50-405.5-49.9-200 0-250 49.9-394.5 49.9v31.8h800v-.2-31.6z' fill='%23003F7C'/%3E%3C/svg%3E");
    position: absolute;
    width: 200%;
    height: 100%;
    animation: wave 10s -3s linear infinite;
    transform: translate3d(0, 0, 0);
    opacity: 0.8;
  }

  .wave:nth-of-type(2) {
    bottom: 0;
    animation: wave 18s linear reverse infinite;
    opacity: 0.5;
  }

  .wave:nth-of-type(3) {
    bottom: 0;
    animation: wave 20s -1s linear infinite;
    opacity: 0.5;
  }

  @keyframes wave {
      0% {transform: translateX(0);}
      50% {transform: translateX(-25%);}
      100% {transform: translateX(-50%);}
  }


@layer base {
  body {
    font-family:'Noto Sans Lao', sans-serif;
  }
}

.hero-waves {
    position: absolute;
    bottom: -1px;
    left: -100px;
    width: calc(100% + 100px);
    z-index: 1;
  }
  .hero-waves .waves {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    -webkit-animation: wave 6s infinite;
            animation: wave 6s infinite;
  }
  .hero-waves .waves.two {
    -webkit-animation-delay: 3s;
            animation-delay: 3s;
  }

  @keyframes fadeInBgImage {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
  
  /* Update the class to apply the fade-in animation with a smooth transition */
  .animate-bg-image {
    animation: fadeInBgImage 5s  ease-in-out; /* Adjust the duration and other properties as needed */
    transition: opacity 0.3s ease; /* Adjust the transition duration and easing function as needed */
  }
  


  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade {
    animation: fadeInUp 5s ease-in-out;
  }




@layer components {
  input[type="checkbox"]:checked ~ label span svg {
    @apply inline-flex;
  }

  .sticky .header-logo {
    @apply py-5 lg:py-2;
  }

  .sticky .menu-scroll.active {
    @apply opacity-80;
  }

  input#togglePlan:checked ~ .dot {
    @apply translate-x-full;
  }

  input#checkboxLabel:checked ~ .box span {
    @apply opacity-100;
  }
}
